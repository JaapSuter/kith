(function(){function require(p, context, parent){ context || (context = 0); var path = require.resolve(p, context), mod = require.modules[context][path]; if (!mod) throw new Error('failed to require "' + p + '" from ' + parent); if(mod.context) { context = mod.context; path = mod.main; mod = require.modules[context][mod.main]; if (!mod) throw new Error('failed to require "' + path + '" from ' + context); } if (!mod.exports) { mod.exports = {}; mod.call(mod.exports, mod, mod.exports, require.relative(path, context)); } return mod.exports;}require.modules = [{}];require.resolve = function(path, context){ var orig = path, reg = path + '.js', index = path + '/index.js'; return require.modules[context][reg] && reg || require.modules[context][index] && index || orig;};require.relative = function(relativeTo, context) { return function(p){ if ('.' != p.charAt(0)) return require(p, context, relativeTo); var path = relativeTo.split('/') , segs = p.split('/'); path.pop(); for (var i = 0; i < segs.length; i++) { var seg = segs[i]; if ('..' == seg) path.pop(); else if ('.' != seg) path.push(seg); } return require(path.join('/'), context, relativeTo); };};
require.modules[0] = { "client/_bootstrap.js": function(module, exports, require){eval("(function() {\n  \"use strict\";\n\n  var ldr;\n\n  ldr = require('client/lib/loader.js');\n\n  ldr.loadWithCallback(\"//connect.facebook.net/en_US/all.js\", \"facebook-jssdk\", function(callback) {\n    return window.fbAsyncInit = callback;\n  });\n\n  ldr.loadWithEvent(\"//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js\");\n\n  ldr.loadWithEvent(\"/js/index-9b8294e09af4b0f0915ed14c4171b31b.js\");\n\n  ldr.ready(function() {\n    return kith.bootstrap();\n  });\n\n}).call(this);\n\n//@ sourceURL=/client/_bootstrap.js");},
"client/lib/loader.js": function(module, exports, require){eval("(function() {\n  \"use strict\";\n\n  var counter, fragment, load, onLoaded, onReady;\n\n  counter = 0;\n\n  onReady = null;\n\n  fragment = document.createDocumentFragment();\n\n  load = function(src, callback, id, assignCallback) {\n    var script;\n    counter += 1;\n    script = document.createElement(\"script\");\n    script.async = true;\n    if (id != null) {\n      script.id = id;\n    }\n    if (assignCallback) {\n      assignCallback(callback);\n    } else {\n      if (script.readyState) {\n        script.onreadystatechange = function() {\n          if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n            script.onreadystatechange = null;\n            return callback();\n          }\n        };\n      } else {\n        script.onload = function() {\n          return callback();\n        };\n      }\n    }\n    script.src = src;\n    return fragment.appendChild(script);\n  };\n\n  onLoaded = function() {\n    counter -= 1;\n    if (counter === 0 && onReady) {\n      return onReady();\n    }\n  };\n\n  module.exports.loadWithEvent = function(src, id) {\n    return load(src, onLoaded, id);\n  };\n\n  module.exports.loadWithCallback = function(src, id, assignCallback) {\n    return load(src, onLoaded, id, assignCallback);\n  };\n\n  module.exports.ready = function(callback) {\n    onReady = callback;\n    document.body.appendChild(fragment);\n    if (counter === 0 && onReady) {\n      return onReady();\n    }\n  };\n\n}).call(this);\n\n//@ sourceURL=/client/lib/loader.js");}};
kith = require('client/_bootstrap.js');
}());